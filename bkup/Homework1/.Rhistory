data(iris)
newiris<-iris
newiris$Species<-NULL
library(colorspace)
require(amap, quietly=TRUE)
require(ggplot2, quietly=TRUE)
require(ggdendro, quietly=TRUE)
hclust <- hclusterpar(na.omit(newiris), method="euclidean", link="ward", nbproc=2)#
new = newiris[1:5, ]
rownames(new) = c('a', 'b', 'c', 'd', 'e')
hc = hclust(dist(new),"ward")
hc
help(hclust)
install.packages(ape)
install.packages('ape')
help("install.packages")
install.packages('ape')
# Homework 1.3
source("hierarchical_clustering.R")
A = matrix(c(0, 0, 0.1, 1, 0.9, 1, 0.1, 0, 0, 0.9, 1, 1), ncol = 2);
pairs = hc(A);
# Homework 1.3
source("hierarchical_clustering.R")
A = matrix(c(0, 0, 0.1, 1, 0.9, 1, 0.1, 0, 0, 0.9, 1, 1), ncol = 2);
pairs = hc(A);
# Homework 1.3
source("hierarchical_clustering.R")
A = matrix(c(0, 0, 0.1, 1, 0.9, 1, 0.1, 0, 0, 0.9, 1, 1), ncol = 2);
pairs = hc(A);
# Homework 1.3
source("hierarchical_clustering.R")
A = matrix(c(0, 0, 0.1, 1, 0.9, 1, 0.1, 0, 0, 0.9, 1, 1), ncol = 2);
pairs = hc(A);
pairs
# Homework 1.3
source("hierarchical_clustering.R")
A = matrix(c(0, 0, 0.1, 1, 0.9, 1, 0.1, 0, 0, 0.9, 1, 1), ncol = 2);
pairs = hc(A);
pairs
# Homework 1.3
source("hierarchical_clustering.R")
A = matrix(c(0, 0, 0.1, 1, 0.9, 1, 0.1, 0, 0, 0.9, 1, 1), ncol = 2);
pairs = hc(A);
pairs
# Homework 1.3
source("hierarchical_clustering.R")
A = matrix(c(0, 0, 0.1, 1, 0.9, 1, 0.1, 0, 0, 0.9, 1, 1), ncol = 2);
pairs = hc(A);
pairs
# Homework 1.3
source("hierarchical_clustering.R")
A = matrix(c(0, 0, 0.1, 1, 0.9, 1, 0.1, 0, 0, 0.9, 1, 1), ncol = 2);
pairs = hc(A);
pairs
a# Homework 1.2
source("kmeans.R");
source("evaluate.R")
##################################################################
#################      For Data1.csv     #########################
##################################################################
data = read("Data1.csv");
k = 3;
type = kmeans(data, k, max_iter = 10000, min_error = 1e-8)[[1]];
plot_points(data, type, k);
# print(data);
# type = kmeans(data, k = 3, max_iter = 10000, min_error = 1e-8)[[1]];
# plot(c(-10, -10, 10, 10), c(-10, 10, -10, 10));
# for(i in 1:length(type)) {
#   if(type[i] == 1) {
#     points(data[i, 1], data[i, 2], col = 'red');
#   }
#   else if(type[i] == 2) {
#     points(data[i, 1], data[i, 2], col = 'green');
#   }
#   else if(type[i] == 3) {
#     points(data[i, 1], data[i, 2], col = 'blue');
#   }
# }
# max_k = 10;
# CH = evaluate_CH(data, max_k);
# plot(1:max_k, CH)
# k = 6;
# max_k = 20;
# type = kmeans(data, k = k, max_iter = 10000, min_error = 1e-8)[[1]];
# plot(c(-1, -1, 10, 10), c(-2, 2, -2, 2));
# lines(data, type, k);
# CH = evaluate_CH(data, max_k = max_k);
# H = evaluate_H(data, max_k = max_k);
# lines(1:max_k, H);
# calc_GAP(data, k = 2);
# max_k = 10;
# res = evaluate_GAP(data, max_k = max_k);
# print(res);
# lines(1:max_k, res[[2]], type = 'o');
#
a# Homework 1.2
source("kmeans.R");
source("evaluate.R")
##################################################################
#################      For Data1.csv     #########################
##################################################################
data = read("Data1.csv");
k = 3;
type = kmeans(data, k, max_iter = 10000, min_error = 1e-8)[[1]];
plot_points(data, type, k);
max_k = 10;
CH = evaluate_CH(data, max_k);
plot(1:max_k, CH)
# print(data);
# type = kmeans(data, k = 3, max_iter = 10000, min_error = 1e-8)[[1]];
# plot(c(-10, -10, 10, 10), c(-10, 10, -10, 10));
# for(i in 1:length(type)) {
#   if(type[i] == 1) {
#     points(data[i, 1], data[i, 2], col = 'red');
#   }
#   else if(type[i] == 2) {
#     points(data[i, 1], data[i, 2], col = 'green');
#   }
#   else if(type[i] == 3) {
#     points(data[i, 1], data[i, 2], col = 'blue');
#   }
# }
# max_k = 10;
# CH = evaluate_CH(data, max_k);
# plot(1:max_k, CH)
# k = 6;
# max_k = 20;
# type = kmeans(data, k = k, max_iter = 10000, min_error = 1e-8)[[1]];
# plot(c(-1, -1, 10, 10), c(-2, 2, -2, 2));
# lines(data, type, k);
# CH = evaluate_CH(data, max_k = max_k);
# H = evaluate_H(data, max_k = max_k);
# lines(1:max_k, H);
# calc_GAP(data, k = 2);
# max_k = 10;
# res = evaluate_GAP(data, max_k = max_k);
# print(res);
# lines(1:max_k, res[[2]], type = 'o');
#
a# Homework 1.2
source("kmeans.R");
source("evaluate.R")
##################################################################
#################      For Data1.csv     #########################
##################################################################
data = read("Data1.csv");
k = 3;
type = kmeans(data, k, max_iter = 10000, min_error = 1e-8)[[1]];
plot_points(data, type, k);
max_k = 10;
CH = evaluate_CH(data, max_k);
lines(1:max_k, CH);
# print(data);
# type = kmeans(data, k = 3, max_iter = 10000, min_error = 1e-8)[[1]];
# plot(c(-10, -10, 10, 10), c(-10, 10, -10, 10));
# for(i in 1:length(type)) {
#   if(type[i] == 1) {
#     points(data[i, 1], data[i, 2], col = 'red');
#   }
#   else if(type[i] == 2) {
#     points(data[i, 1], data[i, 2], col = 'green');
#   }
#   else if(type[i] == 3) {
#     points(data[i, 1], data[i, 2], col = 'blue');
#   }
# }
# max_k = 10;
# CH = evaluate_CH(data, max_k);
# plot(1:max_k, CH)
# k = 6;
# max_k = 20;
# type = kmeans(data, k = k, max_iter = 10000, min_error = 1e-8)[[1]];
# plot(c(-1, -1, 10, 10), c(-2, 2, -2, 2));
# lines(data, type, k);
# CH = evaluate_CH(data, max_k = max_k);
# H = evaluate_H(data, max_k = max_k);
# lines(1:max_k, H);
# calc_GAP(data, k = 2);
# max_k = 10;
# res = evaluate_GAP(data, max_k = max_k);
# print(res);
# lines(1:max_k, res[[2]], type = 'o');
#
a# Homework 1.2
source("kmeans.R");
source("evaluate.R")
##################################################################
#################      For Data1.csv     #########################
##################################################################
data = read("Data1.csv");
k = 3;
type = kmeans(data, k, max_iter = 10000, min_error = 1e-8)[[1]];
plot_points(data, type, k);
max_k = 10;
CH = evaluate_CH(data, max_k);
plot(1:max_k, CH, type = 'o');
# print(data);
# type = kmeans(data, k = 3, max_iter = 10000, min_error = 1e-8)[[1]];
# plot(c(-10, -10, 10, 10), c(-10, 10, -10, 10));
# for(i in 1:length(type)) {
#   if(type[i] == 1) {
#     points(data[i, 1], data[i, 2], col = 'red');
#   }
#   else if(type[i] == 2) {
#     points(data[i, 1], data[i, 2], col = 'green');
#   }
#   else if(type[i] == 3) {
#     points(data[i, 1], data[i, 2], col = 'blue');
#   }
# }
# max_k = 10;
# CH = evaluate_CH(data, max_k);
# plot(1:max_k, CH)
# k = 6;
# max_k = 20;
# type = kmeans(data, k = k, max_iter = 10000, min_error = 1e-8)[[1]];
# plot(c(-1, -1, 10, 10), c(-2, 2, -2, 2));
# lines(data, type, k);
# CH = evaluate_CH(data, max_k = max_k);
# H = evaluate_H(data, max_k = max_k);
# lines(1:max_k, H);
# calc_GAP(data, k = 2);
# max_k = 10;
# res = evaluate_GAP(data, max_k = max_k);
# print(res);
# lines(1:max_k, res[[2]], type = 'o');
#
a# Homework 1.2
source("kmeans.R");
source("evaluate.R")
##################################################################
#################      For Data1.csv     #########################
##################################################################
data = read("Data1.csv");
k = 3;
type = kmeans(data, k, max_iter = 10000, min_error = 1e-8)[[1]];
plot_points(data, type, k);
max_k = 20;
CH = evaluate_CH(data, max_k);
plot(1:max_k, CH, type = 'o');
# print(data);
# type = kmeans(data, k = 3, max_iter = 10000, min_error = 1e-8)[[1]];
# plot(c(-10, -10, 10, 10), c(-10, 10, -10, 10));
# for(i in 1:length(type)) {
#   if(type[i] == 1) {
#     points(data[i, 1], data[i, 2], col = 'red');
#   }
#   else if(type[i] == 2) {
#     points(data[i, 1], data[i, 2], col = 'green');
#   }
#   else if(type[i] == 3) {
#     points(data[i, 1], data[i, 2], col = 'blue');
#   }
# }
# max_k = 10;
# CH = evaluate_CH(data, max_k);
# plot(1:max_k, CH)
# k = 6;
# max_k = 20;
# type = kmeans(data, k = k, max_iter = 10000, min_error = 1e-8)[[1]];
# plot(c(-1, -1, 10, 10), c(-2, 2, -2, 2));
# lines(data, type, k);
# CH = evaluate_CH(data, max_k = max_k);
# H = evaluate_H(data, max_k = max_k);
# lines(1:max_k, H);
# calc_GAP(data, k = 2);
# max_k = 10;
# res = evaluate_GAP(data, max_k = max_k);
# print(res);
# lines(1:max_k, res[[2]], type = 'o');
#
a# Homework 1.2
source("kmeans.R");
source("evaluate.R")
##################################################################
#################      For Data1.csv     #########################
##################################################################
data = read("Data1.csv");
k = 3;
type = kmeans(data, k, max_iter = 10000, min_error = 1e-8)[[1]];
plot_points(data, type, k);
max_k = 20;
CH = evaluate_CH(data, max_k);
plot(1:max_k, CH, type = 'o');
H = evaluate_H(data, max_k = max_k);
plot(1:max_k, H, type = 'o');
# print(data);
# type = kmeans(data, k = 3, max_iter = 10000, min_error = 1e-8)[[1]];
# plot(c(-10, -10, 10, 10), c(-10, 10, -10, 10));
# for(i in 1:length(type)) {
#   if(type[i] == 1) {
#     points(data[i, 1], data[i, 2], col = 'red');
#   }
#   else if(type[i] == 2) {
#     points(data[i, 1], data[i, 2], col = 'green');
#   }
#   else if(type[i] == 3) {
#     points(data[i, 1], data[i, 2], col = 'blue');
#   }
# }
# max_k = 10;
# CH = evaluate_CH(data, max_k);
# plot(1:max_k, CH)
# k = 6;
# max_k = 20;
# type = kmeans(data, k = k, max_iter = 10000, min_error = 1e-8)[[1]];
# plot(c(-1, -1, 10, 10), c(-2, 2, -2, 2));
# lines(data, type, k);
# CH = evaluate_CH(data, max_k = max_k);
# H = evaluate_H(data, max_k = max_k);
# lines(1:max_k, H);
# calc_GAP(data, k = 2);
# max_k = 10;
# res = evaluate_GAP(data, max_k = max_k);
# print(res);
# lines(1:max_k, res[[2]], type = 'o');
#
a# Homework 1.2
source("kmeans.R");
source("evaluate.R")
##################################################################
#################      For Data1.csv     #########################
##################################################################
data = read("Data1.csv");
k = 3;
type = kmeans(data, k, max_iter = 10000, min_error = 1e-8)[[1]];
plot_points(data, type, k);
max_k = 20;
CH = evaluate_CH(data, max_k);
plot(1:max_k, CH, type = 'o');
H = evaluate_H(data, max_k = max_k);
plot(1:max_k, H, type = 'o');
res = evaluate_GAP(data, max_k = max_k);
print(res);
plot(1:max_k, res[[2]], type = 'o');
# print(data);
# type = kmeans(data, k = 3, max_iter = 10000, min_error = 1e-8)[[1]];
# plot(c(-10, -10, 10, 10), c(-10, 10, -10, 10));
# for(i in 1:length(type)) {
#   if(type[i] == 1) {
#     points(data[i, 1], data[i, 2], col = 'red');
#   }
#   else if(type[i] == 2) {
#     points(data[i, 1], data[i, 2], col = 'green');
#   }
#   else if(type[i] == 3) {
#     points(data[i, 1], data[i, 2], col = 'blue');
#   }
# }
# max_k = 10;
# CH = evaluate_CH(data, max_k);
# plot(1:max_k, CH)
# k = 6;
# max_k = 20;
# type = kmeans(data, k = k, max_iter = 10000, min_error = 1e-8)[[1]];
# plot(c(-1, -1, 10, 10), c(-2, 2, -2, 2));
# lines(data, type, k);
# CH = evaluate_CH(data, max_k = max_k);
# H = evaluate_H(data, max_k = max_k);
# lines(1:max_k, H);
# calc_GAP(data, k = 2);
# max_k = 10;
# res = evaluate_GAP(data, max_k = max_k);
# print(res);
# lines(1:max_k, res[[2]], type = 'o');
#
a# Homework 1.2
source("kmeans.R");
source("evaluate.R")
##################################################################
#################      For Data1.csv     #########################
##################################################################
data = read("Data1.csv");
k = 3;
type = kmeans(data, k, max_iter = 10000, min_error = 1e-8)[[1]];
plot_points(data, type, k);
max_k = 20;
CH = evaluate_CH(data, max_k);
plot(1:max_k, CH, type = 'o');
H = evaluate_H(data, max_k = max_k);
plot(1:max_k, H, type = 'o');
res = evaluate_GAP(data, max_k = max_k);
print(res);
plot(1:max_k, res[[2]], type = 'o');
data = read("Data1.csv");
k = 3;
type = kmeans(data, k, max_iter = 10000, min_error = 1e-8)[[1]];
plot_points(data, type, k);
max_k = 20;
CH = evaluate_CH(data, max_k);
plot(1:max_k, CH, type = 'o');
H = evaluate_H(data, max_k = max_k);
plot(1:max_k, H, type = 'o');
res = evaluate_GAP(data, max_k = max_k);
print(res);
plot(1:max_k, res[[2]], type = 'o');
data = read("Data2.csv");
# k = 3;
# type = kmeans(data, k, max_iter = 10000, min_error = 1e-8)[[1]];
print(type)
# plot_points(data, type, k);
max_k = 20;
CH = evaluate_CH(data, max_k);
plot(1:max_k, CH, type = 'o');
H = evaluate_H(data, max_k = max_k);
plot(1:max_k, H, type = 'o');
res = evaluate_GAP(data, max_k = max_k);
print(res);
plot(1:max_k, res[[2]], type = 'o');
max_k = 20;
CH = evaluate_CH(data, max_k);
plot(1:max_k, CH, type = 'o');
H = evaluate_H(data, max_k = max_k);
plot(1:max_k, H, type = 'o');
res = evaluate_GAP(data, max_k = max_k);
print(res);
plot(1:max_k, res[[2]], type = 'o');
H = evaluate_H(data, max_k = max_k);
plot(1:max_k, H, type = 'o');
CH = evaluate_CH(data, max_k);
plot(1:max_k, CH, type = 'o');
eye(4)
??eyes
eyes(4)
diag(3)
data = read("Data3.csv");
# k = 3;
# type = kmeans(data, k, max_iter = 10000, min_error = 1e-8)[[1]];
print(type)
# plot_points(data, type, k);
max_k = 20;
CH = evaluate_CH(data, max_k);
plot(1:max_k, CH, type = 'o');
data = read("Data2.csv");
# k = 3;
# type = kmeans(data, k, max_iter = 10000, min_error = 1e-8)[[1]];
print(type)
data = read("Data2.csv");
k = 3;
type = kmeans(data, k, max_iter = 10000, min_error = 1e-8)[[1]];
print(type)
data = read("Data3.csv")
CH = evaluate_CH(data, max_k);
plot(1:max_k, CH, type = 'o');
H = evaluate_H(data, max_k = max_k);
plot(1:max_k, H, type = 'o');
res = evaluate_GAP(data, max_k = max_k);
print(res);
plot(1:max_k, res[[2]], type = 'o');
data = read("Data3.csv");
k = 3;
type = kmeans(data, k, max_iter = 10000, min_error = 1e-8)[[1]];
print(type)
max_k = 20;
CH = evaluate_CH(data, max_k);
plot(1:max_k, CH, type = 'o');
data = read("Data4.csv");
CH = evaluate_CH(data, max_k);
plot(1:max_k, CH, type = 'o');
H = evaluate_H(data, max_k = max_k);
plot(1:max_k, H, type = 'o');
res = evaluate_GAP(data, max_k = max_k);
print(res);
plot(1:max_k, res[[2]], type = 'o');
k = 3;
type = kmeans(data, k, max_iter = 10000, min_error = 1e-8)[[1]];
print(type)
CH = evaluate_CH(data, max_k);
plot(1:max_k, CH, type = 'o');
CH = evaluate_CH(data, max_k);
plot(1:max_k, CH, type = 'o');
# Homework 1.3
source("hierarchical_clustering.R")
source("kmeans.R")
###########################################
##########  For Data1.csv  ################
##########################################
data = read("Data1.csv");
pairs1 = hc(data, linkage = 'single');
pairs2 = hc(data, linkage = 'complete');
pairs3 = hc(data, linkage = 'average');
pairs1
pairs2
pairs3
# Homework 1.3
source("hierarchical_clustering.R")
source("kmeans.R")
###########################################
##########  For Data1.csv  ################
##########################################
data = read("Data1.csv");
data
pairs1 = hc(data, linkage = 'single');
pairs2 = hc(data, linkage = 'complete');
pairs3 = hc(data, linkage = 'average');
pairs1
pairs2
pairs3
data = read("Data1.csv");
single = hc(data, linkage = 'single');
complete = hc(data, linkage = 'complete');
average = hc(data, linkage = 'average');
single
complete
average
data = read("Data2.csv");
single = hc(data, linkage = 'single');
complete = hc(data, linkage = 'complete');
average = hc(data, linkage = 'average');
single
complete
average
